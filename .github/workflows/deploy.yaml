name: Build and Deploy to AKS

on:
  push:
    branches: [ main ]

env:
  ACR_NAME: yourACRName
  AKS_CLUSTER_NAME: yourAKSCluster
  AKS_RESOURCE_GROUP: yourResourceGroup
  NAMESPACE: your-namespace
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.ACR_NAME }}
    
    - name: Build and push client image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/client:${{ env.IMAGE_TAG }} ./client
        docker push ${{ env.ACR_NAME }}.azurecr.io/client:${{ env.IMAGE_TAG }}
    
    - name: Build and push service-one image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/service-one:${{ env.IMAGE_TAG }} ./services/service-one
        docker push ${{ env.ACR_NAME }}.azurecr.io/service-one:${{ env.IMAGE_TAG }}
    
    - name: Build and push service-two image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/service-two:${{ env.IMAGE_TAG }} ./services/service-two
        docker push ${{ env.ACR_NAME }}.azurecr.io/service-two:${{ env.IMAGE_TAG }}
    
    - name: Build and push service-three image
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/service-three:${{ env.IMAGE_TAG }} ./services/service-three
        docker push ${{ env.ACR_NAME }}.azurecr.io/service-three:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to AKS
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}
    
    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Update Kubernetes manifests with image tags
      run: |
        # Replace placeholders in kubernetes manifests
        for file in kubernetes/*.yaml; do
          sed -i "s|\${ACR_NAME}|${{ env.ACR_NAME }}|g" $file
          sed -i "s|\${IMAGE_TAG}|${{ env.IMAGE_TAG }}|g" $file
        done
    
    - name: Deploy applications to AKS
      run: |
        kubectl apply -f kubernetes/ -n ${{ env.NAMESPACE }}
    
    - name: Verify deployments
      run: |
        kubectl rollout status deployment/client -n ${{ env.NAMESPACE }}
        kubectl rollout status deployment/service-one -n ${{ env.NAMESPACE }}
        kubectl rollout status deployment/service-two -n ${{ env.NAMESPACE }}
        kubectl rollout status deployment/service-three -n ${{ env.NAMESPACE }}